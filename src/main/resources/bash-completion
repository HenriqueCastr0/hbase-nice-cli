_args()
{
    local cur prev opts command
    COMPREPLY=()
    cur="${COMP_WORDS[COMP_CWORD]}"
    prev="${COMP_WORDS[COMP_CWORD-1]}"
    command="${COMP_WORDS[1]}"
    opts="--scana --list --counta"
    command_opts="scan list count"
    general_opts="-q --quorum"
    scan_opts="-t -l -cf -ff -j -fi -ff --table --limit --columnFamily --jarFile --fileFormat --filter"
    list_opts="-l --limit -s --sort"
    count_opts=""
    table_opts=""


    if [[ ${prev} == "hbase-cli" ]] ; then
        COMPREPLY=( $(compgen -W "${command_opts}" -- ${cur}) )
        return 0
    fi

    if [[ ${prev} == "-t" || ${prev} == "--table" ]] ; then
	local quorum=""
	_findQuorum quorum
	if [[ ${#quorum} -gt 0 ]] ; then
		_readTableNames table_opts $quorum
	        COMPREPLY=( $(compgen -W "${table_opts}" -- ${cur}) )
	fi
        return 0
    fi

    if [[ ${prev} == "-q" || ${prev} == "--quorum" ]] ; then
	    _known_hosts
	    return 0
    fi


    if [[ ${command} == "scan" ]] ; then
        COMPREPLY=( $(compgen -W "${general_opts} ${scan_opts}" -- ${cur}) )
        return 0
    fi

    if [[ ${command} == "list" ]] ; then
        COMPREPLY=( $(compgen -W "${general_opts} ${list_opts}" -- ${cur}) )
        return 0
    fi

    if [[ ${command} == "count" ]] ; then
        COMPREPLY=( $(compgen -W "${general_opts} ${count_opts}" -- ${cur}) )
        return 0
    fi

}

_readTableNames()
{
 res=""
 file="/usr/lib/hbase-cli/${2}-hbase-cli-table-names"
 if [ -f $file ]; then
 	while read line
 	do
    	res+="${line} "
 	done < "${file}"
 fi
 eval "$1='${res}'"
}

_findQuorum()
{
   for ((i = 0 ; i < ${#COMP_WORDS} ; i++ )) ;
   do
	if [[ ${COMP_WORDS[$i]} == "-q" || ${COMP_WORDS[$i]} == "--quorum" ]] ; then
		quorum="${COMP_WORDS[$i+1]}"
		eval "$1='${quorum}'"
	fi
   done
}

complete -F _args hbase-cli
